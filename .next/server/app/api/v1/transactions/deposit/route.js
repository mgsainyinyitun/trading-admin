"use strict";(()=>{var t={};t.id=1767,t.ids=[1767],t.modules={53524:t=>{t.exports=require("@prisma/client")},20399:t=>{t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:t=>{t.exports=require("buffer")},84770:t=>{t.exports=require("crypto")},76162:t=>{t.exports=require("stream")},21764:t=>{t.exports=require("util")},43356:(t,e,r)=>{r.r(e),r.d(e,{originalPathname:()=>z,patchFetch:()=>b,requestAsyncStorage:()=>y,routeModule:()=>v,serverHooks:()=>h,staticGenerationAsyncStorage:()=>g});var n={};r.r(n),r.d(n,{GET:()=>f,POST:()=>m});var i=r(49303),o=r(88716),a=r(60670),s=r(87070),u=r(72331),c=r(90455),d=r(50650),p=r(96799),l=r(7410);async function m(t){try{let e=await (0,c.Ym)(t);if(!e)return s.NextResponse.json({error:"Unauthorized"},{status:401});let r=await t.json(),n=p.p$.parse(r),i=await u._.account.findUnique({where:{accountNo:n.accountNo,customerId:Number(e.id)}});if(!i)return s.NextResponse.json({error:"Account not found or access denied"},{status:404});if(!i.isActive)return s.NextResponse.json({error:"Account is inactive"},{status:400});let o=await u._.$transaction(async t=>({transaction:await t.transaction.create({data:{transactionId:(0,d.l)(),type:"DEPOSIT",amount:n.amount,description:n.description,status:"PENDING",accountId:i.id,updatedAt:new Date}})}));return s.NextResponse.json({message:"Deposit successful",transaction:{transactionId:o.transaction.transactionId,type:o.transaction.type,amount:o.transaction.amount,description:o.transaction.description,status:o.transaction.status,accountId:o.transaction.accountId,createdAt:o.transaction.createdAt}})}catch(t){if(console.error("Deposit error:",t),t instanceof l.z.ZodError)return s.NextResponse.json({error:"Invalid input",details:t.errors},{status:400});return s.NextResponse.json({error:"Failed to process deposit"},{status:500})}}async function f(t){let e=await (0,c.Ym)(t);if(!e)return s.NextResponse.json({error:"Unauthorized"},{status:401});let r=await u._.account.findMany({where:{customerId:Number(e.id)}}),n=[];for(let t of r){let e=await u._.transaction.findMany({where:{accountId:t.id,type:"DEPOSIT"}});n.push(e)}return s.NextResponse.json(n)}let v=new i.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/v1/transactions/deposit/route",pathname:"/api/v1/transactions/deposit",filename:"route",bundlePath:"app/api/v1/transactions/deposit/route"},resolvedPagePath:"C:\\Users\\sainyi\\Desktop\\projects\\others\\trading-admin\\app\\api\\v1\\transactions\\deposit\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:y,staticGenerationAsyncStorage:g,serverHooks:h}=v,z="/api/v1/transactions/deposit/route";function b(){return(0,a.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:g})}},90455:(t,e,r)=>{r.d(e,{Og:()=>c,Rp:()=>a,Ym:()=>s,so:()=>o});var n=r(24295),i=r(72331);function o(t){let e=t.headers.get("authorization");return e?.startsWith("Bearer ")?e.split(" ")[1]:null}async function a(t){try{if(await u(t))return null;let e=(0,n.WX)(t);return{id:e.customerId,email:e.email}}catch(t){return null}}async function s(t){let e=o(t);return e?a(e):null}async function u(t){let e=await i._.invalidtoken.findUnique({where:{token:t}});return!!e&&(!(e.expiresAt<new Date)||(await i._.invalidtoken.delete({where:{id:e.id}}),!1))}async function c(t,e){await i._.invalidtoken.create({data:{token:t,expiresAt:e}})}},24295:(t,e,r)=>{r.d(e,{RA:()=>a,WX:()=>s});var n=r(41482),i=r.n(n);let o=process.env.JWT_SECRET||"your-secret-key",a=t=>i().sign(t,o,{expiresIn:"30d"}),s=t=>{try{return i().verify(t,o)}catch(t){throw Error("Invalid token")}}},72331:(t,e,r)=>{r.d(e,{_:()=>i});var n=r(53524);let i=global.prisma||new n.PrismaClient({log:["query"]})},50650:(t,e,r)=>{function n(){let t=Date.now().toString(36),e=Math.random().toString(36).substring(2,8);return`TXN${t}${e}`.toUpperCase()}function i(t,e){if(!t)return!1;{let r=Math.random()<=t;return r&&(r=Math.random()<=e),r}}r.d(e,{V:()=>i,l:()=>n})},96799:(t,e,r)=>{r.d(e,{$y:()=>u,GE:()=>a,X5:()=>s,dX:()=>o,p$:()=>i});var n=r(7410);let i=n.z.object({accountNo:n.z.string().min(1,"Account number is required"),amount:n.z.string().or(n.z.number()).transform(t=>{let e="string"==typeof t?parseFloat(t):t;if(isNaN(e)||e<=0)throw Error("Amount must be a positive number");return e}),description:n.z.string().optional()}),o=n.z.object({address:n.z.string().min(1,"Address is required"),currency:n.z.string(),amount:n.z.string().or(n.z.number()).transform(t=>{let e="string"==typeof t?parseFloat(t):t;if(isNaN(e)||e<=0)throw Error("Amount must be a positive number");return e}),description:n.z.string().optional()}),a=n.z.object({customerId:n.z.number().int().positive(),currency:n.z.string().min(1),tradeType:n.z.enum(["SHORT","LONG"]),period:n.z.number().int().positive(),tradeQuantity:n.z.number().int().positive()}),s=n.z.object({customerId:n.z.number().int().positive(),tradeId:n.z.number().int().positive(),outcome:n.z.enum(["win","lose"]).nullable()}),u=n.z.object({currency:n.z.string().min(1,"Currency is required"),amount:n.z.string().or(n.z.number()).transform(t=>{let e="string"==typeof t?Number.parseFloat(t):t;if(isNaN(e)||e<=0)throw Error("Amount must be a positive number");return e}),description:n.z.string().optional()})}};var e=require("../../../../../webpack-runtime.js");e.C(t);var r=t=>e(e.s=t),n=e.X(0,[8948,5972,1482,7410],()=>r(43356));module.exports=n})();