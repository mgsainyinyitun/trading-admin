"use strict";(()=>{var e={};e.id=7888,e.ids=[7888],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},16909:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>z,requestAsyncStorage:()=>c,routeModule:()=>m,serverHooks:()=>b,staticGenerationAsyncStorage:()=>l});var n={};t.r(n),t.d(n,{POST:()=>p});var i=t(49303),o=t(88716),a=t(60670),s=t(72331),u=t(87070),d=t(96799);async function p(e){if("POST"===e.method){let r=await e.json(),{customerId:t,tradeId:n}=d.X5.parse(r);if(!await s._.trade.findUnique({where:{id:n,customerId:Number(t)}}))return u.NextResponse.json({error:"Trade not found or access denied"},{status:404});try{return await s._.$transaction(async e=>{await e.trade.update({where:{id:n,customerId:Number(t)},data:{tradingStatus:"FAILED"}})}),u.NextResponse.json({success:!0})}catch(e){return console.error("An error occurred, rolling back the transaction:",e),u.NextResponse.json({error:"Error trading this time! Please try again"})}}return u.NextResponse.json({error:"Method not allowed"})}let m=new i.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/v1/trade-fail/route",pathname:"/api/v1/trade-fail",filename:"route",bundlePath:"app/api/v1/trade-fail/route"},resolvedPagePath:"C:\\Users\\sainyi\\Desktop\\projects\\others\\trading-admin\\app\\api\\v1\\trade-fail\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:c,staticGenerationAsyncStorage:l,serverHooks:b}=m,g="/api/v1/trade-fail/route";function z(){return(0,a.patchFetch)({serverHooks:b,staticGenerationAsyncStorage:l})}},72331:(e,r,t)=>{t.d(r,{_:()=>i});var n=t(53524);let i=global.prisma||new n.PrismaClient({log:["query"]})},96799:(e,r,t)=>{t.d(r,{$y:()=>u,GE:()=>a,X5:()=>s,dX:()=>o,p$:()=>i});var n=t(7410);let i=n.z.object({accountNo:n.z.string().min(1,"Account number is required"),amount:n.z.string().or(n.z.number()).transform(e=>{let r="string"==typeof e?parseFloat(e):e;if(isNaN(r)||r<=0)throw Error("Amount must be a positive number");return r}),description:n.z.string().optional()}),o=n.z.object({address:n.z.string().min(1,"Address is required"),currency:n.z.string(),amount:n.z.string().or(n.z.number()).transform(e=>{let r="string"==typeof e?parseFloat(e):e;if(isNaN(r)||r<=0)throw Error("Amount must be a positive number");return r}),description:n.z.string().optional()}),a=n.z.object({customerId:n.z.number().int().positive(),currency:n.z.string().min(1),tradeType:n.z.enum(["SHORT","LONG"]),period:n.z.number().int().positive(),tradeQuantity:n.z.number().int().positive()}),s=n.z.object({customerId:n.z.number().int().positive(),tradeId:n.z.number().int().positive(),outcome:n.z.enum(["win","lose"]).nullable()}),u=n.z.object({currency:n.z.string().min(1,"Currency is required"),amount:n.z.string().or(n.z.number()).transform(e=>{let r="string"==typeof e?Number.parseFloat(e):e;if(isNaN(r)||r<=0)throw Error("Amount must be a positive number");return r}),description:n.z.string().optional()})}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[8948,5972,7410],()=>t(16909));module.exports=n})();